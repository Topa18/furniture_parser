# import logging
import asyncio
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.markdown import hlink, hbold
from bot_config import TOKEN
from discount_parser import get_page_quantity, get_data
global page_number

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

start_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='/start')]
],
    resize_keyboard=True)

sex_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ú—É–∂—Å–∫–∏–µ')], [KeyboardButton(text='–ñ–µ–Ω—Å–∫–∏–µ')]
    ], 
    resize_keyboard=True,)

continue_man_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–î–∞ üòé')], [KeyboardButton(text='–ù–µ—Ç')]
    ],
    resize_keyboard=True)

continue_woman_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–î–∞ üôÇ')], [KeyboardButton(text='–ù–µ—Ç')]
    ],
    resize_keyboard=True)


@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}!\n"
                   "–î–ª—è –∫–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏?",
                   reply_markup=sex_kb)


@dp.message(F.text == '–ú—É–∂—Å–∫–∏–µ')
async def get_man_sneakers(message: Message):
    global page_number
    await message.answer(text="–ò—â—É –º—É–∂—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π... ü§î\n")

    page_number = 1
    data = get_data(sex='man')

    for item in data:
        card = f"{hlink(title=item.get('model'), url=item.get('url'))}\n"\
                f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('brand'))}\n"\
                f"{hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{(item.get('old_price'))}\n"\
                f"üî•{hbold('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ')}{item.get('new_price')}üî•\n"\
                f"{hbold(item.get('type'))}\n"\
                f"{hbold('–¶–≤–µ—Ç: ')}{item.get('color')}\n"\
                f"{hbold('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ')}{item.get('sizes')}"
        
        await message.answer(card)

    await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∫—É—Å–Ω—ã–º —Ü–µ–Ω–∞–º!\n'\
                                '–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ?', reply_markup=continue_man_kb)
    page_number += 1


@dp.message(F.text == '–ñ–µ–Ω—Å–∫–∏–µ')
async def get_woman_sneakers(message: Message):
    global page_number
    await message.answer(text="–ò—â—É –∂–µ–Ω—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π... ü§î\n")

    page_number = 1
    data = get_data(sex='woman')

    for item in data:
        card = f"{hlink(title=item.get('model'), url=item.get('url'))}\n"\
                f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('brand'))}\n"\
                f"{hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{(item.get('old_price'))}\n"\
                f"üî•{hbold('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ')}{item.get('new_price')}üî•\n"\
                f"{hbold(item.get('type'))}\n"\
                f"{hbold('–¶–≤–µ—Ç: ')}{item.get('color')}\n"\
                f"{hbold('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ')}{item.get('sizes')}"
        
        await message.answer(card)
    
    await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∫—É—Å–Ω—ã–º —Ü–µ–Ω–∞–º!\n'\
                                '–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ?', reply_markup=continue_woman_kb)
    page_number += 1
    

@dp.message(F.text == '–î–∞ üòé')
async def get_more_man(message: Message):
    global page_number
    await message.answer(text="–ü—Ä–æ–¥–æ–ª–∂–∞—é –∏—Å–∫–∞—Ç—å...")
    
    last_page = get_page_quantity()

    if page_number <= last_page:
        data = get_data(page=page_number)

        for item in data:
            card = f"{hlink(title=item.get('model'), url=item.get('url'))}\n"\
                    f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('brand'))}\n"\
                    f"{hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{(item.get('old_price'))}\n"\
                    f"üî•{hbold('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ')}{item.get('new_price')}üî•\n"\
                    f"{hbold(item.get('type'))}\n"\
                    f"{hbold('–¶–≤–µ—Ç: ')}{item.get('color')}\n"\
                    f"{hbold('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ')}{item.get('sizes')}"
            
            await message.answer(card)
        
        await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∫—É—Å–Ω—ã–º —Ü–µ–Ω–∞–º!\n'\
                                '–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ?', reply_markup=continue_man_kb)
    if page_number > last_page:
        await message.answer(text="–≠—Ç–æ –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –ù–∞–¥–µ—é—Å—å —è –ø–æ–º–æ–≥!", reply_markup=start_kb)

    page_number += 1


@dp.message(F.text == '–î–∞ üôÇ')
async def get_more_woman(message: Message):
    global page_number
    await message.answer(text="–ü—Ä–æ–¥–æ–ª–∂–∞—é –∏—Å–∫–∞—Ç—å...")
    
    last_page = get_page_quantity(woman=True)

    if page_number <= last_page:
        data = get_data(page=page_number, sex='woman')

        for item in data:
            card = f"{hlink(title=item.get('model'), url=item.get('url'))}\n"\
                    f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('brand'))}\n"\
                    f"{hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{(item.get('old_price'))}\n"\
                    f"üî•{hbold('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ')}{item.get('new_price')}üî•\n"\
                    f"{hbold(item.get('type'))}\n"\
                    f"{hbold('–¶–≤–µ—Ç: ')}{item.get('color')}\n"\
                    f"{hbold('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ')}{item.get('sizes')}"
            
            await message.answer(card)
        
        await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∫—É—Å–Ω—ã–º —Ü–µ–Ω–∞–º\n'\
                                    '–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ?', reply_markup=continue_woman_kb)
    if page_number > last_page:
        await message.answer(text="–≠—Ç–æ –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!", reply_markup=start_kb)
    
    page_number += 1


@dp.message(F.text == '–ù–µ—Ç')
async def stop_searching(message: Message):
    await message.answer(text="–ù–∞–¥–µ—é—Å—å —è –ø–æ–º–æ–≥!\n", reply_markup=start_kb)


async def run_bot():
    await dp.start_polling(bot)

try:
    # logging.basicConfig(level=logging.INFO)
    if __name__ == "__main__":
        asyncio.run(run_bot())
except KeyboardInterrupt:
    print("Bot execution stopped.")
except Exception as e:
    print(e)
