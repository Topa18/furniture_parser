import logging
import asyncio
import json
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.markdown import hlink, hbold
from bot_config import TOKEN
from discount_parser import get_page_count, get_data

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
sex_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ú—É–∂—Å–∫–∏–µ')], [KeyboardButton(text='–ñ–µ–Ω—Å–∫–∏–µ')]
    ], 
    resize_keyboard=True,
    )

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}!\n"
                   "–î–ª—è –∫–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏?",
                   reply_markup=sex_kb)

@dp.message(F.text == '–ú—É–∂—Å–∫–∏–µ')
async def get_man_sneakers(message: Message):
    await message.answer(text="–ò—â—É –º—É–∂—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π... ü§î\n"
                         "–ï—Å–ª–∏ —Å–∫–∏–¥–æ–∫ –º–Ω–æ–≥–æ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã, –º–æ–∂–µ—à—å —Å–º–µ–ª–æ —Å–≤–µ—Ä–Ω—É—Ç—å –±–æ—Ç, "
                         "—è –ø—Ä–∏—à–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üòâ")

    get_data(get_page_count())
    
    with open("result_for_man.json") as file:
        cards = json.load(file)
    
    for item in cards:
        card = f"{hlink(title=item.get('–ú–æ–¥–µ–ª—å'), url=item.get('–°—Å—ã–ª–∫–∞'))}\n"\
                f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('–ë—Ä–µ–Ω–¥'))}\n"\
                f"{hbold("–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ")}{(item.get('–¶–µ–Ω–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏'))}\n"\
                f"{hbold("–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ")}üî•{item.get('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ')}üî•\n"\
                f"{hbold(item.get('–¢–∏–ø'))}\n"\
                f"{hbold('–¶–≤–µ—Ç: ')}{item.get('–¶–≤–µ—Ç')}\n"\
                f"{hbold("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ")}{item.get("–†–∞–∑–º–µ—Ä—ã")}"
        
        await message.answer(card)

@dp.message(F.text == '–ñ–µ–Ω—Å–∫–∏–µ')
async def get_woman_sneakers(message: Message):
    await message.answer(text="–ò—â—É –∂–µ–Ω—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π... ü§î\n"
                         "–ï—Å–ª–∏ —Å–∫–∏–¥–æ–∫ –º–Ω–æ–≥–æ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã, –º–æ–∂–µ—à—å —Å–º–µ–ª–æ —Å–≤–µ—Ä–Ω—É—Ç—å –±–æ—Ç, "
                         "—è –ø—Ä–∏—à–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üòâ")

    get_data(get_page_count(woman=True))

    with open("result_for_woman.json") as file:
        cards = json.load(file)
    
    for item in cards:
        card = f"{hlink(title=item.get('–ú–æ–¥–µ–ª—å'), url=item.get('–°—Å—ã–ª–∫–∞'))}\n"\
                f"{hbold('–ë—Ä–µ–Ω–¥: ')}{(item.get('–ë—Ä–µ–Ω–¥'))}\n"\
                f"{hbold("–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ")}{(item.get('–¶–µ–Ω–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏'))}\n"\
                f"{hbold("–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ: ")}üî•{item.get('–¶–µ–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ')}üî•\n"\
                f"{hbold(item.get('–¢–∏–ø'))}\n"\
                f"{hbold('–¶–≤–µ—Ç: ')}{item.get('–¶–≤–µ—Ç')}\n"\
                f"{hbold("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: ")}{item.get("–†–∞–∑–º–µ—Ä—ã")}"
        
        await message.answer(card)

async def run_bot():
    await dp.start_polling(bot)

try:
    logging.basicConfig(level=logging.INFO)
    if __name__ == "__main__":
        asyncio.run(run_bot())
except KeyboardInterrupt:
    print("Bot execution stopped.")
